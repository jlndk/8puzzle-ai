{"version":3,"sources":["../../src/comlink.ts","src/lib/util.ts","src/game/Grid.ts","node_modules/ts-priority-queue/src/BinaryHeapStrategy.js","node_modules/ts-priority-queue/src/PriorityQueue.js","node_modules/ts-priority-queue/index.js","src/ai/AStarAI.ts","src/game/EightPuzzle.ts","src/sketch.ts","src/ai/worker.ts"],"names":[],"mappings":"AKAA,AFAA,ACAA;ACCA,AFAA,ACAA;ACCA,AFAA,ACAA;ACCA,AFAA,ACAA;ACCA,AFAA,ACAA;ADCA,ACAA;ADCA,ACAA,AGLA,MAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AJMA,ACAA,AKPA,APCA,ADDA,MQAA,APCA,GDDgB,GCChB,GODA,APCA,GODA,GRAA,CCCA,ADDgC,CCChC,EODA,CAAA,CRAA,EAA0C,MQA1C,CAAA,APCA,CAAA;ACOA,ACAA,AGNA,ANDI,MMCJ,ENDU,GAAG,GAAG,CMChB,ANDiB,GMCjB,ANDoB,KAAJ,CAAZ,CMCJ,CAAA,SAAA,CAAA;AJOA,ACAA,AKRA,APOA,IAAY,EOPZ,MAAA,CPOA,EOPA,OAAA,CAAA,cAAA,CAAA;ANSA,ACAA,AGNA,ANFI,MMEJ,CNFS,IAAI,CMEb,ANFc,GMEd,ANFiB,GAAG,CAAC,GMErB,CAAA,ENFiB,GAAa,CAA1B,EAA6B,CAAC,GAAG,CMErC,ANFI,CMEJ,CNFwC,CAAC,EAArC,EAAyC;AES7C,ACAA,AKTA,APMA,ADLQ,CCKR,KONA,IRCc,CCKF,ADLG,GQDf,ARCkB,GQDlB,CRCsB,CAAC,CCKvB,EAAqB,EONrB,ARCkB,CQDlB,ARC6B,IAAI,CAAC,MQDlC,ARC6B,CQD7B,KRC8C,CAAC,GAAG,CAArB,CAAX,CAAV;ADHR,AGYA,ACAA,AGPA,ALII,ADLI,ECKJ,GDLK,CMCT,ENDY,CAAC,CAAD,CCKR,ADLI,CCKJ,CDLa,CMCjB,ELII,ADLgB,CMCpB,ALII,ADLiB,CAAD,CAAZ,CCKJ,GDLuB,CMC3B,ALII,ADLwB,CMC5B,END+B,CAAC,CAAD,CAAJ,EAAS,GAAG,CMCvC,ANDwC,CMCxC,ANDuC,CAAZ,CAAnB;AESR,ACAA,AEbA,AGIA,APMI,ADLC,AOLL,ENUI,IIVJ,AEAA,GCIgB,EPMZ,CAAA,GMVJ,GNUI,AMVJ,CNUI,GAAA,CONJ,CACI,CHLJ,AEAA,CAAA,EFAA,AJUI,EONJ,EAEI,IAFJ,EAGI,EDPJ,CAAA,EFAA,AGIA,CHJA,CGQI,MHRJ,CAAA,CGIA,EAKI,YALJ,EAKqC,EHTrC,CAAA,CAAA;AHcA,ACAA,AKHI,AFKJ,ALLI,EAAA,IKKiB,EELX,GPAN,COAU,APAV,GOAa,EFKjB,CAAgC,ALL5B,COAiB,APAjB,GAAA,GOAiB,CAAA,EPAjB,EOAa,CAAS,IAAT,EAAe,KAAf,EAAsB,QAAtB,CAAb;ANIJ,ACAA,AEZA,AGUI,AFoBA,ALrBA,ADNA,AOJJ,ED+BI,ALrBA,IITJ,AEDA,ECWU,CRPC,CQOC,CPDR,CITJ,AJSI,ADNA,CQOW,AFoBX,CAAY,CD9BhB,AC8BI,EAAmB,ELrBnB,AMVJ,CNUI,COCW,AFoBX,CD9BJ,AGUe,ADXf,CFCA,AC8BqC,ALrBjC,MOCW,AFoBX,CEpBmB,APDnB,CKqB+C,KD9BnD,AGUe,CHVf,AEDA,CAAA,CCWI,MDXJ,CAAA,oBAAA,CAAA,CAAA;ALcA,ACAA,AEVA,AGSI,AFUA,ALZH,ADNA,CCCD,EAAY,MOOD,AFUP,EEVS,CAAC,APPO,GAAT,KOOD,AFUP,CEVmB,CPPX,CKiBM,ALjBN,CKiBR,CEVO,EAAkB,KPPjB,KAAA,EOOD,CAAP,IPPQ,CAAA,SAAA,GAAS,EAAT,CAAZ;ACSA,ACAA,AKDC,AFUG,ACrBS,OAAA,CAAA,CDqBT,IAAA,ECrBS,CDqBF,ECrByC,GDqBhD;AJRJ,ACAA,AGaI,ALhBJ,ADfA,AOMI,MNSS,CDfb,CAAA,AOMU,CDyBN,CLhBJ,CAAiB,GMTD,IAAI,CDyBhB,CN/BJ,EM+BiB,CN/BjB,GM+BI,CCzBgB,CAAA,OPNpB,AOMgB;ALahB,ACAA,AKfA,AF8BQ,ALdJ,AMfgD,CAAvC,CNeT,KOhBJ,CAAA,CF8Ba,IAAL,ALdJ,CAAY,EKcI,ELdhB,EKcI,ALdsB,EOhB9B,GAAA,APgBI,EAAsD,QAAtD,EAAqE,EOhBzE;ANgBA,ACAA,AKFA,AFiBQ,ALdA,ADZR,SQSA,AFiBa,ALdA,ADZG,CQShB,AFiBQ,GAAS,ALdT,CKcA,EEjBR,APGoB,COHb,GPGC,ADZR,CAA+B,GAA/B,EAA2C,GAA3C,EQSA,ARTiD;AEYjD,ACAA,AEZA,AC2BQ,ALdA,ADZJ,AODJ,MFAa,CLCJ,EM0BI,ALdA,AMbG,EPCH,CAAC,CKDd,CAAoB,AJaZ,CKcA,AN1BS,CAAb,CCYiB,AMbrB,CD2BsB,AN1BF,AODK,CPCJ,AODrB,EAA8B,CNatB,ADZgB,EM0BhB,CN1BmB,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC;AEYzC,ACAA,AEbA,AC6BQ,ALfA,ADZA,AODJ,EFDJ,IECQ,GD4BK,ALfA,CKeL,AN3BM,AODV,CD4BW,ED7Bf,ALEiB,GKFjB,ALEoB,CCYZ,EDZe,CCYC,ADZA,CAAD,CAAf,CM2BA,CAAoB,GAApB,CLfwB,CKeC,GAAzB,ALf4B,KAAK,eAAL,EAA5B;ACAR,ACAA,AEbI,AC8BI,ALhBH,SKgBQ,iBAAL;AJhBR,ACAA,AGkBQ,AN9BA,AODJ,EAAA,CAAC,CAAC,ERaO,GOkBA,AN9BA,AODT,CD+BI,CAAO,CC/BD,CPCG,CAAC,GDYM,ACZH,CAAb,AODW,ERaQ,ACZH,CM8BhB,AN9BiB,CM8BC,CAAlB,CN9BoB,EDYK,CAAC,ACZH,CAAC,MAAxB,EAAgC,CAAC,EAAjC,EAAqC,CDYZ;AGCjC,ACAA,AGkBQ,ALjBJ,ADbQ,AODJ,ENcJ,EMdI,ENcA,EMdI,CD+BC,ALjBL,EMdO,CPCG,GODC,CPCG,GAAG,GAAG,CAAC,CAAD,CM8BpB,AN9BI,CM8BkB,EC/BX,CAAA,OAAJ,CAAgB,CAAhB,EAAmB,CAAnB,ED+BP,AC/B6B,IAAtB,CAAP,CADW,CAEX;ALaR,ACAA,AGmBQ,ALlBA,AMbA,MRWK,IOoBC,CLlBC,IAAI,IAAJ,CFFY,AEEH,GFFM,EEED,IFFO,AEErB,CFFsB,CEEF,MAAA,CAAA,QAAA,CAAS,CFFR,IEEa,KAAd,CAApB,EAA0C,MAAA,CAAA,QAAA,CAAS,KAAK,QAAd,CAA1C,CAAP;ACAR,ACAA,AEbI,AC+BY,ALjBX,ADdO,MM+BI,GD/BZ,CC+BU,AN/BE,CKAZ,GAAK,ALAW,IKAP,CLAY,GAAb,EAAkB,aKAjB,CAAA,OAAJ,CAA8B;AHcvC,ACAA,AEbQ,AC8Bc,AN9BN,AOAR,IAAA,ERWK,AMXL,AC8Bc,EC9BV,CAAC,IAAL,EPAe,CKAL,ALAM,CAAD,CDWE,AMXL,CAAC,ALAM,CKAP,ALAG,CDWK,ACXZ,CKAQ,CAAJ,INWc,CAAC,AMXL,CAAC,CAAC,IAAF,KAAW,CAAC,CAAC,IAAF,KNWP;AGGlC,ACAA,AEfuC,AC+BzB,ALfF,ADdC,AOAR,ENcO,CMnBR,EFGK,CAAL,AJgBY,CAAC,CKesB,CLfvB,EAAW,EAAX,CKeuB,CAAA,ALfJ,IKeI,CAAK,QAAL,CAAc,KAAK,IAAnB,CAA/B;APjBR,AGEA,ACAA,AEbI,AC8BI,ALhBA,ADdC,MDWH,GOmBO,CLhBC,GKgBN,ALhBS,GKgBG,ALhBA,CFHH,GAAG,AOmBZ,CLhBiB,KFHC,AEGN,CFHO,AEGI,EAAE,CAAC,CAAd,EAAiB,EAAE,CAAC,CAApB,CAAZ,KFHkB,CAA1B;AGGA,ACAA,AGiBQ,ALhBA,ADdH,AODD,EAAA,CAAC,CAAC,IAAF,CD+BS,ALhBA,EMfA,GNeL,CAAW,EAAE,AMfH,CNeI,CAAd,EKgBA,ALhBiB,EAAE,CKgBC,ALhBA,CAApB,IAAyB,KAAK,EKgB9B,GLhByB,CAAW,EAAE,CAAC,CAAd,EAAiB,EAAE,CAAC,CAApB,CAAzB;AFmJR,AGnJA,AGdI,ACgCI,ALjBA,ADdP,AODO,IAAA,ERiKF,EQjKM,CFAR,ACgCS,ALjBA,CKiBL,AChCM,CDgCC,GPiID,AElJN,AMfA,CNeW,EFkJD,AMjKd,AJeiB,CAAC,CAAd,CFkJS,AMjKF,ACgCP,CAAiB,ALjBA,CKiBjB,CLjBmB,CFmJxB,AMlKgB,AJeS,CAApB,IAAyB,EFmJvB,CMlKK,AJeP,EFmJL,AMlKC,KNkKc,QAAf,IAA2B,GAAG,KAAK,IAApC,IAA6C,OAAO,GAAP,KAAe,UAD9D;AAgCA,AGlLA,AGdI,ACgCC,ALjBA,AMfA,GAFD;ALiBJ,AFzBA,AOWC,OPXD,CAAA,WAAA,GAAA,WAAA;AE0BA,AGfI,ACiCA,ALjBA,EKiBA,ALjBA,IKiBI,ALjBA,CAAC,EIhBL,ACiCI,OLjBA,EAAqB,EIhBzB,GAAc,CAAd;AHgBJ,AGfI,ACiCI,ALjBA,ADhBR,AOZA,OAAA,CAAA,CD6Ca,ANjCG,CCgBF,GDhBd,CCgBkB,ADhBM,EOZxB,CN4BmD,ADhBnD,EAAkC,AOZlC,ID6CQ,ANjCR,EAA8C,CMiChB,CC7C9B,ID6CQ,CAA6B,GAAD,IAAQ;AJjB5C,AIkBY,ALjBA,ADhBR,OCgBS,CDhBH,GMiCO,ANjCJ,GAAU,ECgBD,ADhBlB,CCgBmB,EKiBX,ELjBA,CKiBgB,ELjBE,CKiBlB;AP+JZ,AGhLA,AGhBI,ACkCQ,ALlBoB,MFgL1B,EEhL0B,CIhB5B,AJgB6B,EKkBhB,ALlBkB,CAAC,CAAN,GKkBlB,GAAa,CDlCrB,CCkCQ,EDlCM,CAAd,ENgMsB,GAAyC;AACjE,AGhLF,AGmEC,ACjDW,ALnB2B,ADfnC,EDgMF,KChMO,CCe8B,CAAC,EFiL7B,AO9JM,ALnByB,ADf7B,CMkCD,ANlCE,CDgMA,AO9JK,ENlCF,CDgMJ,AChMT,EAAgB,CMkCR,ANlCS,CDiMjB,ECjMoB,IAApB,EDiMQ,ACjMkB,CDiMjB,ACjMkB,EAA3B,CDiMQ,CAAR,ACjM+B,IDiMb,GAAmB,CAAC,WAAD,CAF0B;AG9KnE,AGhBI,ACkCQ,ALpBkB,ADdtB,IAAA,EMkCI,CLrBuC,ADbxC,CAAC,CAAD,CAAH,GMkCW,ANlCF,CMkCG,CNlCZ,IMkCI,CAAc,GAAd;AP+JV,AGhLF,AIkBS,ALpBG,EFkLV,GOnKM,ELfK,IFkLF,CAAC,GAAD,CElLW,CFkLP,AElLQ,KAAX,GAAmB;AFmL3B,AGhLJ,AIkBK,ALrB4B,ADdzB,QCcyB,CAAC,ADdrB,CDiMH,CEnL0B,CAAL,CDdd,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,CAAC,EAA3B,EAA+B;ADiM3B,AG/KZ,ADJuC,ADb3B,MDgMA,EEnL2B,CAAC,EFmL9B,AEnLgC,CDbxB,CAAC,GAAG,GAAG,CAAC,KAAJ,EAAV;ADgMO,AG9KnB,AIkBI,ALvB2B,EKuB3B,IP4Je,CO5JV,ALzB0C,GKyB1C;AP4JC,AG7KV,AGlBI,ACoCI,ALvBI,ADbA,EKAR,KJaS,CFkLgB,CO3JhB,CDpCD,ACoCJ,ANpCQ,CKAH,ACoCE,ANpCE,CD+LgB,GM/LrB,CJaU,ADbA,CKAG,AJaF,EAAX,EKuBJ,CAAkB,ALvBE,CKuBpB,ENpCI,CD+LiB,CC/LI,CD+L7B,CM/LQ,EAA8C;ANgMtD,AG7KJ,AGlBQ,ACoCA,ALxBsB,ADZd,ID+LZ,IEnL0B,CKwBjB,ALxBkB,CFmLrB,CAAC,AEnLsB,CAAL,EFmLlB,AC/LY,ED+LN,EC/LU,GD+LhB,CAAN,CC/LkB,CAAU,CMoCxB,CAAsB,cAAtB,gDNpCwF,IAAI,EAA9E,CAAN;ADgMZ,AG7KJ,AGlBQ,ACqCA,AL1B4B,ADXvB,QCWuB,CIXvB,ACqCA,AL1BwB,EFoL1B,AEpL4B,CFoL3B,AEpL4B,EK0BhC,GP0JG,AO1JU,EP0JF,CAAC,KAAD,CAAR,AO1JH,CP0JJ,QM/LI,CAAgC,IAAhC,EAFkD,CAIlD;AN8LL,AG7KH,AImBQ,AL3BoB,GF8KuC,IEjLhB,EK8BtC,WAAL,GAAmB,CAAnB;AJlBR,AGjBQ,ACoCA,AL3BI,ADXA,MAAA,CCWC,EITA,ACoCA,ANtCE,CAAC,CKER,ALFO,CKEC,ALFJ,CMsCJ,ANtCW,CAAP,EMsCQ,AL3BE,CITd,AJSe,CITD,ALFE,CAAZ,EMsCJ,AL3BI,CITc,EJSI,QITR,CAAe,IAAf,EAAqB,YAArB,CAAd,EALkD,CAOlD;AN4LN,AG5KF,AGfQ,ACkCA,AL5BwB,ADVvB,ED+LP,MErL8B,CK4BnB,AL5BoB,EAAE,CAAL,CFqLjB,CAAC,GOzJN,CPyJK,EAAK,AOzJM,SAAhB;AP0JJ,AG5KJ,AImBQ,AL7B8B,ADTjC,ID+LD,IAAI,AEtL8B,CFsL7B,AOzJI,AL7B0B,EAAE,GFsLrC,COzJI,GAAc,SAAd;AP0JJ,AG5KJ,AGhBQ,ACoCA,AL/BsB,SILjB,CCoCC,CPwJH,EM5LM,CAAC,CN4LH,CAAC,CM5LK,CAAb,EN4LO,AM5LS,CN4LpB,IM5LyB,EAAL,CAAQ,MAAR,KAAmB,CAAnC,EAAsC,CAAC,EAAvC,EAA2C;AN6LhD,AG5KH,AGhBY,ACmCI,ALnCmC,ADH/C,KCGI,CKmCQ,GNtCL,CMsCG,EDnCI,ALHd,IKGkB,GAAG,KAAK,EAAL,CAAQ,OAAR,EAAb,CADuC,CAGvC;AHeZ,AIkBsB,AL5Bd,ADTP,MMqCqB,IL5BR;AF0KqD,AG/JnE,AGfY,ACgCE,AL5BE,CF0KhB,KE1KgB,CAAF,CK4ByB,EDhCvB,IAAI,ACgCmB,CDhClB,ACgCkB,IAAA,CAAK,MDhC5B,EAAJ,ACgC2B,CAAc,CDhCjB,ICgCsB,IAAnB,CAA/B;APoKR,AGpLA,AGfgB,ACiCR,AL9BW,ADvBnB,MCuBmB,CDvBnB,CKoBgB,ALpBhB,CMqDa,GNrDb,CMqDQ,EDjCe,ALpBvB,CKoBwB,ACiCJ,GNrDpB,CMqDQ,CDjCQ,CAAc,4BAA4B,MAAA,CAAA,YAAA,CAAa,KAAK,QAAL,CAAc,IAA3B,CAAgC,SAA1E;AHgBhB,AGfgB,ACiCR,AL/BM,QAAW,CK+BZ,GL/BgB,CAAC,EIFP,IAAI,CAAC,CCiCpB,CL/BqB,CAArB,CK+BoB,GDjCZ,SCiCR;AJjBR,AGfa,ACkCL,AL/BA,ADTR,OKDmD,CASvC,CCgCC,ANxCG,CCSF,GK+BN,CNxCR,CAAsB,ECSD,EDTrB,CCSwB,CDTU;AEsBlC,AImBQ,ALhCkB,ADRtB,MCQsB,CAAC,CDRjB,CMwCG,ALhCgB,CKgCrB,CAAO,GLhCmB,CKgC1B,ANxCS,GAAG,EAAhB,ECQyB,CAAc,CAAd,GAAkB,CAAvB;AFiMxB,AGnLA,AImBK,ALjC6C,MFiM5C,AEjM4C,CAAC,EAAE,KAAK,QAAL,CAAc,CAAd,EFiM3B,CEjM6C,EFoMnE;AACF,AGtLF,AGfY,AJAY,ADPpB,ED4MF,GErMM,EDPC,GKOO,CNqML,AMrMM,ALPJ,CAAC,CD4MA,CMrMM,CLPH,CAAb,ED4MS,AC5MO,CKOJ,ALPK,GD6MjB,AC7MoB,CKOK,CAAjB,EAAoB,ALP5B,EAA0B,CAAC,CD6MnB,CAAC,AC7MT,EAA+B,GD6MvB,CAAR,IAAmB,WAAW,IAAI,KAFlC;AGpLJ,AGfgB,ACkCZ,ANzCI,EMyCJ,ENzCI,OAAO,CAAC,CKOK,GLPb,CAAa,CAAC,CMyCD,ENzCI,CMyCJ,ANzCb,KKOQ;ANsMd,AGtLF,AGfa,ACkCL,ALlCA,ADPH,ED4MH,KMjNiD,CAcvC,AJFA,CKkCC,EPmKF,CAAC,GErMO,CAAC,CAAR,EKkCJ,CLlCgB,CAAZ,CKkCc,GLlCG,EKkCrB,KLlC4B,CAAC,CAAR,IAAa,KAAK,IAAnC,IAA2C,OAAO,CAAC,CAAR,GAAY,CAAvD,IAA4D,OAAO,CAAC,CAAR,IAAa,KAAK,IAAlF,EAAwF;AFqMlF,AGrLd,AImBK,ALlCO,IFoME,QEpMI,IAAI,KAAJ,CAAU,eAAV,CAAN;AFoMA,AGpLZ,ADfS,ADRL,GD2MO,EAAU,IC3MV,OAAP;AD4MA,AGpLJ,AGfY,ACkCoB,AN1C/B,QD2MO,AOjKU,GDlCD,ONmMb,CMnMQ,CAAc,ECkCM,CDlCpB,CAAkB,CCkCE,GDlCpB,EAfuC,CAiBvC;AHcZ,AImBQ,ALlCA,QKkCI,CLlCC,IKkCI,ALlCT,CAAU,KAAK,IKkCf,EAAqB,ELlCrB,EAAyB,OAAzB;AFmMJ,AGnLJ,AGdY,ACiCA,ALlCJ,ADhBR,OAAA,CDkNQ,AClNR,CCgBa,EICI,ENiMJ,AOhKM,ANlDnB,GAAA,CKiBuB,AJDf,CKkCgB,ELlCA,CICZ,ALjBZ,IDkNyB,AMjMM,EJDvB,EIC2B,CNiM/B,AMjMgC,ENiMJ,GMjMD,EAAnB,EAAiC,GCiC1B,EAAP;APiKN,AGnLN,AGdgB,ACiCP,ALlCJ,KK+B2B,CPmK1B,AO9JE,UP8JQ,GAAG;AACX,AGnLR,AGdgB,ALXhB,QD4MQ,CC5MQ,GAAhB,CAAuB,CKWD,CNiMP,CC5Mf,CD4MiB,CMjMS,ALXO,GD2Md,AMhMU,ALX7B,EAAoE,EKWnC,CAAC,IAAL,EAAb,CAF6B,CAI7B;ANgMR,AGnLR,ADfI,ADVA,ECUA,MFkMI,AElME,CAAC,ADVA,CCUD,EAAM,ADVF,CD4MD,AC5ME,ED4MA,IC5MJ,CAAmB,CAAC,GAAD,EAAM,GAAN,EAAW,CAAX,KAAiB,GAAG,GAAG,GAAG,CAAC,GAAD,EAAM,CAAN,CAA7C,EAAuD,CAAvD,CAAP;AD6MM,AGnLV,AGbgB,ACgCR,ALlCA,ADVP,ICUO,CAAC,CAAC,EIEM,ENgMN,COhKK,CDhCK,CAAC,CJFb,CKkCW,ALlCA,CAAC,CFkMH,AMhMD,AJFK,CIEK,CNgMP,GMhMH,ACgCD,CAAa,ALlCpB,CFkMgB,AMrMqB,CNqMpB,AM9LT,CC8BW,IAAQ,EP+JpB;AAEL,AGnLV,AImBY,ALlCJ,IAAA,CAAC,CAAC,IFkMA,EOhKQ,EPgKJ,AElMN,CAAW,CFkMH,CElMR,EKkCiB,EPgKJ,CAAC,AOhKM,IP8Jb,IO9Ja,CAAA,OAAA,CAAQ,KAAK,MAAb,CAAhB;APiKF,AGnLV,AGZgB,AC+BJ,ALlCJ,ADdR,ICcQ,CAAC,CAAC,CDdV,CAAA,EDgNU,CChNV,CKiBoB,AC+BF,CD/BG,CC+BD,ANhDpB,CDgNe,AElMP,CAAY,CFkMH,AOhKM,ALlCF,ADdrB,CKiB0B,AJHJ,IFkMA,CAAC,COhKO,ALlCtB,EIGa,AC+BT,ALlCkB,CIGK,AJHJ,CAAC,EIGX,CAAkB,GJH/B,CIGa,CAAL,EAA8B;AN4L/B,AM3LK,AC+BR,ALjCJ,UAAM,CKiCG,ALjCF,GAAG,CIEO,AJFN,CKiCP,ALjCQ,CIEA,CAAQ,CC+BH,EAAE,ALjCT,CKiCU,CD/BR,CAAc,AJFN,IIER,CJFa,CKiCR,CAAY,ELjC7B,GKiCkC,IAAL,CAAU,IAAV,EAAZ,EAA8B,KAAK,YAAnC,CAAb;AP0JO,AMxLF,AC+BL,AN9CZ,MM8CY,CPyJN,EOzJS,AN9CC,KAAhB,CAAyB,KAAzB,EAAuC,GAAvC,EAAqF;AD+MhF,AM/LQ,AC+BJ,ALlCD,ADZJ,KDqMA,AO5JW,CAAP,GL7BK,ADZF,ED8MA,CC9MG,CCYG,ADZF,CCYG,GAAG,CAAb,ADZM,ECYU,ADZF,CCYG,ADZF,GCYK,EDZN,EAAQ,CCYG,ADZX,ICYd,CDZ2B,CCYI,CAAC,EAAhC,EAAoC;AFmMtC,AM/LG,AC+BJ,ALlCO,ADZJ,KKxBkD,CNsOpD,AM7LE,KJLS,ADZF,GAAG,CCYG,ADZF,CD8MH,AElMM,GFkMH,AElMM,CAAb,ADZM,ECYU,ADZF,CCYG,ADZF,GCYK,CDZN,EAAO,CAAP,CCYW,IAAzB,ADZ2B,ECYI,CAAC,ADZF,CAAC,CCY/B,EAAoC,CDZN,EAAO,CAAP,EAAU,CAAV,CAAxB,CAAV;AD8Ma,AEjML,ADZX,GAFS,CAAV,ID+MiB,MEjMC,CFiMM,AEjML,EFiMO,CEjMJ,CAAC,GFiMR,AEjMW,CAAd;AFiMqB,AO9JK,ALlC1B,ADZf,QD4MoC,AO9JnB,MLlCI,CAAC,GAAG,CAAC,GAAG,CAAd,SKkC0B,GAAA;AP8JvB,AM5LX,AC+BA,ALjCQ,OF8LV,CE9LU,CAAC,CIEH,AC+BA,ALjCI,IAAF,CAAO,CKiCH,ALjCJ,GKiCO,ED/BE,EC+BE,CD/BE,KAAK,AC+BX,CAAW,OD/BL,CAAc,IAAd,GAAqB,KAAK,WAA3B,GAA0C,GAA9D,CC+Be,CAAf;AP8JH,AM5LG,AJFQ,ADnBhB,OAAA,CCmBgB,ADnBhB,CCmBiB,CIEH,AJFI,GDnBlB,CKqBkB,EJFF,ADnBhB,CCmByB,EIEX,CACF,AJHI,CDnBhB,uCKsBoD,MAAA,CAAA,YAAA,CAAa,WAAb,CAAyB,sBAAsB,MAAA,CAAA,YAAA,CACnF,KAAK,QAAL,CAAc,IADqE,CAEtF,OAAO,MAAA,CAAA,YAAA,CAAa,KAAK,WAAlB,CAA8B,gBAHpC,CAAN;AAKH,AC0BG,ALhCQ,IKgCR,ILhCQ,CAAC,CKgCH,ALhCI,CKgCH,SAAP,ELhCQ,CKgCW,ALhCI,CKgCH,ALhCZ;AF8LZ,AMtLA,ACwB0B,AL/Bd,ADfhB,MM8C8B,EL/Bd,CAAC,ADfD,CCeE,CF6LP,CAAC,EE7LI,CAAO,CAAP,EAAU,ADf1B,CCegB,ADfU,CAA1B,CCe6B,CF6LlB,AE7LK,ADfmB,ED4MX,AE7LQ,CAAhB,CF6LL,CAAP;AACD,AO/JyB,AL7BZ,ADhBZ,GD0LA,EO7IuB,GL7BX,CAAC,ADhBN,CM6C6B,AL7BtB,ADhBN,GAAG,CCgBC,ADhBL,CCgBY,EDhBJ,CCgBH,ADhBL,GAAY,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAL,CAAhC;AM8CQ,AL5BI,ADjBf,QCiBe,CAAC,CK4BD,AL5BE,IK4BE,AL5BJ,CK4BK,AL5BE,GK4BP,EL5BY,GK4BC,EL5BN,CAAW,CAAX,EAAc,CAAd,KAAoB,CK4B/B,CL5BI,CK4B4B,CL5BG,CAAC,GAAG,CAAC,GAAG,CAAvC,EAA0C,CAAC,GAAG,CAAC,GAAG,CAAlD;AF2Ld,AO9Jc,AL5BH,EF0LX,WAAW,AO9JQ,CP8JP,KO9JE,GAAc,EP8JjB,EAAW,AO9JR;AP+JZ,AO9JS,AL5BJ,ADrBT,OAAA,CD+MQ,AC/MR,SAAA,CD+MkB,CAAC,CC/MnB,MD+MI,EAAwB,CC/M5B;ADgNM,AMvLM,ACyBH,AL5BJ,EIGO,GCqBJ,OPkKI,MAAM,CAAC,MAAP,CACJ,EMxL8B,CAAC,CNwL3B,GMxL0B,ENwL9B,AMxLyC,CNwL/B,UAAU,CAAC,KAAX,CAAiB,OAA3B,CADI,EAEJ,UAAU,CAAC,KAFP,CAAN;AAID,AM1LG,ALtBR,SAAgB,YAAhB,CAA6B,MAA7B,EAA2C;AKuBnC,ACwBA,AL3BJ,ADnBA,ECmBA,MDnBM,CKsBG,CCwBC,KL3BG,CK2BG,CN9CD,CCmBF,CK2BM,CDxBf,ALtBc,GKsBK,CLtBD,IM8CH,AN9CO,CKsBH,ACwBJ,AN9CQ,CKsBJ,GCwBJ,CAA4B,KDxBxB,CAAU,ACwBd,CAAf,AN9Cc,CAAsB,EKsBH,CAAC,CLtBpB,EAA4B,CKsBb,GAAY,IAAI,CAAC,IAA3B,IAAmC,CAAtD;AN0LJ,AMzLI,ACyBA,AL5BA,ADpB4C,IAAA,KKuBvC,ACyBA,CPgKH,AE5LI,IK4BN,CL5BW,EK4BE,CL5BC,EF4LF,AMzLZ,AJHA,CF4La,EMzLM,ACyBA,GPgKvB,EChNwE,CKuBjD,ACyBM,CDzBN,ACyBO,ANhD4C,KMgDvC,CDzBZ,CAAO,IAAP,ACyBM,CDzBzB,CCyBuC,KAAK,IAAnB,EAAyB,KAAK,IAAL,CAAU,KAAnC,EAA0C,KAAK,IAAL,CAAU,QAApD,EAA8D,KAAK,YAAnE,CAAzB;APiKL,AMzLE,AC0BG,AL7BA,ADrB0C,GAA5B,CMkDd,ANlDJ,MMkDU,AL7BA,CK6BC,EL7BE,GAAG,IK6BZ,CL7BiB,IAAL,GAAY,CAAxB;AIKJ,ACyBC,ANlDD,SAAO,SAAS,CAAC,MAAV,CAAiB,MAAjB,CAAP;ADqLA,AE/JI,ADrBP,CDiLD,OE5JY,KAAK,QAAL,CAAc,CAAd,KAAoB,CAAxB,EAA2B;AF6LnC,AO/JY,AL7BA,EK6BA,IL7BA,KAAK,CAAC,IAAN,CAAW,EK6BM,GAAA,IL7BG,CAAC,IAArB;AK8BJ,AL7BC,AD1BT,OAAA,CAAA,EMuDc,MAAM,GAAG,CNvDvB,GAAA,CMuD4B,CAAL,CAAO,SNvD9B,GMuDuB,CAAoB,OAApB,CAAf;AACA,IAAA,MAAM,CAAC,QAAP,CAAgB,cAAhB,EAFqB,CAGrB;AD3BI,AJHJ,ADtBK,EKyBD,KLzBC,CCsBD,ADtBC,IAAA,CCsBI,EDtBI,CKyBK,ALzBN,GKyBM,CLzBS,CCsBvB,ADtBwB,CCsBV,ADtBW,CCsBzB,GDtB6B,ECsBT,GAAxB,EAA6B,ADtBW,IAAX,CAAF,EAAoB,OAApB,CAA4B,CAA5B,IAAiC,IAAvD;AK0BL,AC4BA,AL/BI,MF4LC,AE5LD,EIGA,CAAC,CC4BC,CL/BG,CAAC,GIGL,CAAA,AJHD,CAAW,GK+BC,EP6JK,CO7JF,EP6JK,CE5LA,CAAC,EF4LG,AO7JH,CAAC,EP6JF,AE5LpB,CF+LV,AM5LW,CN6LX,AOjKyB,CPiKxB,AM7LK,CC4BA,CD5B0B,KN6LhC,EAAU,oBAAV,CADA,EAEA,CAAC,OAAD,EAAU,oBAAV,CAFA,CAH8B;AMxLpB,AC6BJ,ALhCC,ADtBT,IMsDQ,KNtDQ,CMsDF,CAAC,INtDf,CAAuB,GMsDf,ANtDR,CMsDwB,CNtDO,IMsDF,CAAL,CAAO,KAAP,GAAe,UAAU,CAAC,KAA1B,GAAkC,EAAlD,EAAsD,KAAK,CAAL,CAAO,MAAP,GAAgB,UAAU,CAAC,MAA3B,GAAoC,EAA1F;AD5BC,AC6BD,ANtDJ,IMsDI,INtDE,EMsDI,CAAC,MNtDI,GAA6C,GMsDxD,CAAoB,MAAM,KAAK,KAAL,EAA1B;AACH,ALjCG,ADrBA,IAAA,ICqBI,CFkMI,IElMC,ADrBA,EAAE,CDuNI,KAAU,AElMrB,ADrBa,CCqBC,ADtBsC,CDwN/B,AElMrB,GFkMoC,EElMhB,CAAxB,EAA2B,CFkMwB;AACzD,AM/LM,AJHI,ADrBJ,EDuNN,EAAE,ACvNI,CDuNH,CElMO,IIGE,CJHG,ADrBF,CCqBG,CDrBD,GCqBL,CAAW,EDrBA,CAFyC,CDyN9D,CAAoB,GM/LO,CJHG,CAAC,CIGD,CJHpB,EFkMV,EAA+B,AM/LI,SN+LK,EM/LV,GAAmB,GN+LlB,CAAkB,CM/LK,CN+LvB,EAAkC,KM/LhB,CAAc,IAAzD;ANgMJ,AM/LI,AC8BJ,ALjCK,ADrBD,EMsDJ,ENtDI,IDuNA,AOjKE,CPiKD,CM/LK,ALxBA,CDuNN,AOjKE,CNtDM,GDuND,CAAC,EAAE,ACvNI,CDuNH,AM/LI,AL3ByC,GK2BtC,CN+LtB,EAAqB,EM/LM,WAAL,GAAmB,KAAK,EAAL,CAAQ,MAA7C;ANgMF,AM/LE,AC8BA,ANtDA,IAAA,IMsDI,CAAC,CD9BC,ALxBA,EAAG,EMsDC,ENtDF,GMsDR,CNtD0B,CMsDT,GNtDa,CKwBT,GAAG,ALxBU,CAAC,IKwBN,EL5B2B,MK4BhC,CAAc,IAAtC;ANgMH,AM/LG,AC8BI,ALlCJ,ADpBA,IAAA,ICoBI,EIIE,ALxBA,EAAG,CCoBA,GDpBD,EKwBM,ELxBW,CKwBR,AJJb,CAAc,CAAd,KAAoB,GAAxB,EAA6B,GIIG,GAAG,KAAK,WAAxC;AACA,AC8BC,ALlCG,ADpBA,MCoBA,IIIE,ALxBE,CCoBC,ADpBA,CCoBC,GDpBN,CCoBA,CIIS,AJJE,ADpBA,GKwBC,ILxBM,CAAP,CCoBS,CAAC,CIID,GAAG,AJJvB,GIIJ;AN+LJ,AM9LI,AJJC,ADpBG,UDsNF,AM9LI,GLxBK,GKwBC,ALxBE,CAAS,EKwBR,IAAI,ALxBU,CAAC,IAAP,CKwBJ,ALxBgB,CKwBhB,GLxBI,CAAT,EAA6B,GAAD,GKwBvB,CAAa,ALxBmB,IAAI,CAAC,GAAD,CAAJ,GAAY,GKwB5C,CAA6B,ALxBmB,CAAC,IAAI,CAAC,CKwBlB,ELxBiB,CAAL,CAArD,CAAV,CKwBmD,CAAA,YAAA,CAAa,KAAK,WAAlB,CAA8B,kBAArF;AN8LI,AM7LJ,AC8BA,ANtDC,IKwBD,EN6LI,EAAF,AM7LE,AC8BA,CD9BC,IC8BI,OD9BT,CAAiB,GC8Bb,GAAmB,KAAK,KAAL,CAAW,MAAX,GAAoB,CAA3C,EAA8C;AP+JtC,AM5LJ,AC8BA,ALnCJ,AD5BwD,GAA5D,GD6NY,AM5LJ,GAAG,CN4LL,CM5LO,AC8BA,ALnCF,IKmCH,CLnCJ,EKmCgB,IAAZ,ED/Ba;AN6LH,AM3LV,AC8BA,ALnCP,MFgMiB,AM3LV,OAFa;AN6Lf,AM1LE,AC8BH,ANtDL,MKwBQ,EN0LgB,AClNlB,IKwBQ,ALxBJ,EDkNc,AM1LR,CN0LQ,AClNV,KAAD,CDkNW,CAAA,EClNU,KKwBH,GAAG,CLxBS,CAAC,OKqBvB,ALrB8B,KAAR,CAAT,CAAwB,KAAxB,CAAlC;ADmNE,AM1LM,AJLO,MF+Lb,AM1LM,GJLD,CF+LD,EAAE,KE/LO,CAAC,IAAD,EAAa;AF8LJ,AM7LH,ACmCjB,ALnCA,ADpBJ,KDiNwB,AM7LpB,EN+LE,CE/LE,CF+LA,AO5JC,ANvDF,CDmNE,EE/LG,CKmCR,ANvDO,CDiNa,AO1JV,ANvDF,CDiNZ,AE7Le,CAAX,CDpBO,CMuDP,ALnCc,ADpBlB,CMuDmB,KAAK,KAAL,CAAW,KAAK,WAAL,EAAX,CAAf;AP8JJ,AM3LC,AC8BA,ALnCO,ADpBX,UDoNS,EEhMQ,IAAI,KAAJ,CFgMI,AEhMM,GFgMH,CAAC,EAAE,CAAC,IAAH,CAAQ,YAAR,IAAwB,EAAzB,EAA6B,GAA7B,CAAiC,AEhMxC,CAAN,YFgMa,CAArB;AACA,AEhMK,KAHuB,CAKxB,EF8LA,WAAJ;AM5RgB,ACgIhB,ANvEJ,EMuEI,IAAI,CNvER,CAAA,CMuEQ,KNvER,GAAA,MAAA;ADoOI,AO5JI,QP4JA,CO5JK,CAAL,CAAO,UAAP,CAAkB,CAAlB;AP6JF,AM9RN,AJ+FQ,ADtBR,OKzEA,CAAA,CLyEgB,CCsBF,EF+LF,GM9RZ,EJ+FqB,CF+LH,AM9RlB,EJ+F2C,CF+LtB,IAAI,AM9RzB,CN8R0B,AE/LiB,ADtB3C,CCsB2C,EDtBV,EDqNZ,CAAW,AE/LW,CF+LtB,AE/L4B,EF+Ld,CAAC,CAAf,AE/LgC,EF+Ld,CE/LiB,IAAb,CF+LtB,AE/Lb,CF+LsC,AErMd,CFqMe,AE9LvC,GF8LsC,EAAM,IAAN,KAAe,GAAG,CAAC,IAAD,CAA3C,EAAmD,GAAnD,CAAf;AACA,AM5LN,ACgCQ,ANzDJ,QMyDQ,IP4JA,CO5JK,KAAL,EP4JQ,GAAG,AO5JI,IP4JA,CAAC,IO5JpB,EP4Je,AO5Je,CP4JH,CAAC,GAAD,EAAM,IAAN,KAAe,GAAG,CAAC,IAAD,CAA9B,EAAsC,GAAtC,CAAjB;AO3JM,ALnCJ,ADtBJ,ICsBI,KDtBG,EMyDM,ALnCF,CAAC,IDtBE,GCsBK,CAAC,GKmCZ,GLnCI,GAAiB,CAAlB,CAAP,EDtBG,CCsB2B,IAA9B,ADtBgC,CCcR,CAUxB,SDxBG,IAA4C,IAAI,YAAY,iBAAnE;ADqNE,AO3JM,ANzDX,cDoNa,IAAR;AACE,AO3JC,ALlCD,UAAM,GF6LN,KE7Lc,GAAG,MAAA,CAAA,YAAA,CAAa,OAAb,CAAjB,CAXwB,CAaxB;AF2LA,AM3LR,AL7BA,MK6BM,CL7BN,CAAA,MK6BA,CAAc,UL7Bd,GAAA,iBAAA;ADwNQ,AM3LR,ACkCQ,ALjCA,EIDR,MCkCY,ELjCE,GIDd,ACkCiB,ELjCE,CIDnB,EJCsB,GKiCd,EAAmB,CLjCL,CAAA,IAAA,CAAK,QAAL,EAAe,IAAf,CAAd;AF2LE,AM3LE,ACkCA,ALjCJ,AD1BR,SKyBY,ALzBI,CC0BF,CKiCG,CDlCL,GAAM,ACkCN,CAAU,CN3DtB,CAA4B,CKyBN,GAAJ,ACkCN,ALjCc,AD1B1B,CM2D6B,CDlCjB,ALzBuB,CC0BN,GKiCK,CAAtB,ELjCiB,CAAA,IAAA,CAAK,OAAL,EAAc,IAAd,CAArB;AF2LI,AM1KX,ACiBW,ALhCJ,AD3BJ,SAAO,EM2DM,ALhCF,CFyLH,CCpNG,CAAC,KAAL,CAAW,GDoNC,CCpNG,CAAC,CDoND,AOzJd,CAAqB,KAAK,EPyJ1B,ACpNU,CAAe,IAAf,CM2DV,AN3DD,CAAP;ADqNO,AOzJC,ALhCA,AD3BX,MC2BW,IAAI,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,KAAf,CADH;AF2LL,AM5LN,ACmCK,ALhCG,EIHR,GAAG,CAAC,AJGI,IIHL,EAAiB;AAChB,AJAO,AD5Bf,KC4BQ,ED5BR,CAAA,QAAA,GAAA,QAAA;ADwNQ,AM3LA,ACmCA,ALhCH,SIHQ,ACmCA,GDnCL,CN2LA,AM3LS,ECmCT,CDnCA,CAAa,IAAI,CAAC,SAAL,CAAe,IAAI,CAAC,QAAL,EAAf,CAAb;AN2LA,AM1LH,ACmCG,SAAK,IAAL,CAAU,MAAV,CAAiB,KAAK,CAAtB;APuJA,AEtLI,EAAA,eAAe,GAAA;AFuLjB,AMzLN,ACmCI,ALhCA,EIHJ,GAAG,CAAC,ECmCI,EDnCL,AJGO,EIHU,CCmCP,IAAT,CLhCc,CKgCC,ELhCE,MAAA,CAAA,WAAA,CAAY,KAAK,KAAjB,EAAwB,IAAxB,CAAjB;AFuLI,AMzLJ,ACmCI,WDnCG,ACmCE,CPsJL,IMzLQ,ENyLF,CAAC,AMzLJ,CAAS,GNyLD,AMzLR,CNyLS,AMzLI,ECmChB,CAAqB,CDnCD,CNyLb,AMzLc,CNyLH,CAAC,CAAZ,EAAe,CAAf,CAAD,CAAN,CMzLgB,CAAe,CNyLH,AOtJM,GDnCC,CAAC,CCmCG,KAAL,CAAW,CDnCd,CNyLU,CAAC,AMzL1B,CAAb,CNyLyC,AMzLhD,CNyLiD,AOtJM,IPsJT,CAAQ,KAAT,AOtJzC,CPsJA;AACA,AMzLP,ACmCO,ALhCJ,QAAI,CAAC,EKgCI,CPsJL,AOtJA,CAAO,ILhCX,EKgCI,ALhCW,IFsLA,GAAG,IAAd;AACD,AOtJF,ALhCG,KK6BJ,MAGO,CLhCG,IAAI,KAAJ,CAAU,2BAAV,CAAN;AFuLF,AMzLE,ACmCA,ALhCH,MIHD,IAAI,CCmCK,EDnCL,aCmCA,CAAqB,QAAQ,KAAK,WAAW,OAAO,KAAK,KAAL,CAAW,MAAM,EAArE;ADlCJ,ACmCC,WDnCM,KAAK,GAAL,CAAS,IAAhB;ANyLA,AMxLH,ACmCA,ALhCG,UAAM,CAAC,CAAD,CFqLN,CErLU,CAAJ,IAAS,QAAf;AFqLA,AEnLA,WAAO;AFmLP,AMtLK,ACmCT,ALhCa,EKgCb,IDnCI,AJGS,CAAF,IIHF,GAAA,GCmCM,CAAC,MAAD,EAAe;APoJxB,AMtLF,ACmCA,ALjCY,MAAA,GKiCP,CAAL,CDnCO,ACmCA,KDnCK,CAAC,ECmCb,CAAgB,CDnCT,CAAW,ACmClB,KDnCuB,GAAL,CAAS,MAAT,EAAX,CAAP;ANuLI,AMtLP,ACmCG,ALlCO,KAAP,IKkCK,CAAL,CAAO,CPmJH,QOnJJ,CAAiB,EPmJF,GAAG,AOnJI,CAAL,CAAO,IAAxB,EPmJ0B,AOnJI,CPmJH,IOnJQ,CPmJjB,AOnJY,CPmJG,AOnJI,GAArC,GPmJkB,EAAuB,YAAvB,CAAd;AACD,AOnJH,ALlCH,SKkCQ,CAAL,CAAO,IAAP,CAAY,GAAZ;APoJE,AM1MI,ACuDN,SAAK,CAAL,CAAO,IAAP,CAAY,MAAZ,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,KAAK,CAAL,CAAO,KAAP,GAAe,EAA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","file":"worker.d34025a2.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer(obj: any, transfers: Transferable[]) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","export function shuffleArray<T>(array: T[]): T[] {\n    const buf = [...array];\n    for (let i = buf.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [buf[i], buf[j]] = [buf[j], buf[i]];\n    }\n    return buf;\n}\n\nexport function findIndex2D<T>(arr: T[][], val: T): [number, number] | undefined {\n    for (let y = 0; y < arr.length; y++) {\n        const row = arr[y];\n        for (let x = 0; x < row.length; x++) {\n            const item = row[x];\n            if (item === val) {\n                return [x, y];\n            }\n        }\n    }\n}\n\nexport function to2D<T>(src: T[], size: number): T[][] {\n    const dst: T[][] = [];\n    for (let i = 0; i < size; i++) {\n        dst[i] = [];\n        for (let j = 0; j < size; j++) {\n            const n = src.shift();\n            if (n === undefined) {\n                throw new Error(`Not enough numbers in src to convert into 2d array with size ${size}`);\n            }\n            dst[i][j] = n;\n        }\n    }\n\n    return dst;\n}\n\nexport function range(size: number): number[] {\n    const numbers = [];\n    for (let i = 0; i < size; i++) {\n        numbers.push(i + 1);\n    }\n    return numbers;\n}\n\nexport function sum<T>(arr: T[], map: (item: T, i: number) => number): number {\n    return arr.reduce<number>((sum, val, i) => sum + map(val, i), 0);\n}\n\nexport function sum2D<T>(outer: T[][], map: (item: T, i: number, j: number) => number): number {\n    return sum(outer, (inner, i) => {\n        return sum(inner, (cell, j) => map(cell, i, j));\n    });\n}\n\nexport function factorial(n: number): number {\n    return n < 2 ? 1 : n * factorial(n - 1);\n}\n\nexport function formatNumber(number: number): string {\n    const formatter = new Intl.NumberFormat('da', { maximumSignificantDigits: 3 });\n    return formatter.format(number);\n}\n\nexport const toMb = (n: number) => (n / (1024 * 1024)).toFixed(2) + 'MB';\n\nexport function sizeOf(obj: any): number {\n    const typeSizes: { [key: string]: (item: any) => number } = {\n        undefined: () => 0,\n        boolean: () => 4,\n        number: () => 8,\n        string: (item: string) => 2 * item.length,\n        object: (item: object) => {\n            if (!item) return 0;\n            return sum<string>(Object.keys(item), (key) => size(key) + size(item[key as keyof typeof item]));\n        },\n    };\n\n    const size = (value: any): any => typeSizes[typeof value](value);\n    return size(obj);\n}\n\nexport function isRunningAsWorker(): boolean {\n    // https://stackoverflow.com/a/18002694/2534355\n    return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n}\n\nexport function deepCopy<T>(item: T): T {\n    return JSON.parse(JSON.stringify(item));\n}\n","import p5 from 'p5';\nimport { findIndex2D, range, shuffleArray, to2D, deepCopy } from '../lib/util';\n\nexport type Tile = {\n    x: number;\n    y: number;\n};\n\nexport enum Direction {\n    UP = 'UP',\n    DOWN = 'DOWN',\n    LEFT = 'LEFT',\n    RIGHT = 'RIGHT',\n}\n\nexport class Grid {\n    size: number;\n    tiles: (number | null)[][];\n    freeTile: Tile;\n\n    constructor(size: number, tiles: (number | null)[][], freeTile?: Tile) {\n        this.size = size;\n        this.tiles = tiles;\n        this.freeTile = freeTile ?? this.computeFreeTile();\n    }\n\n    copy(): Grid {\n        return new Grid(this.size, deepCopy(this.tiles), deepCopy(this.freeTile));\n    }\n\n    private swap(c1: Tile, c2: Tile) {\n        const tmp = this.tiles[c2.y][c2.x];\n        this.tiles[c2.y][c2.x] = this.tiles[c1.y][c1.x];\n        this.tiles[c1.y][c1.x] = tmp;\n    }\n\n    move(direction: Direction) {\n        const vecs: { [key in Direction]: Tile } = {\n            [Direction.LEFT]: { x: -1, y: 0 },\n            [Direction.RIGHT]: { x: 1, y: 0 },\n            [Direction.UP]: { x: 0, y: -1 },\n            [Direction.DOWN]: { x: 0, y: 1 },\n        };\n\n        const { x, y } = vecs[direction];\n\n        const newFree = { x: this.freeTile.x + x, y: this.freeTile.y + y };\n\n        if (newFree.x < 0 || newFree.x >= this.size || newFree.y < 0 || newFree.y >= this.size) {\n            throw new Error('Out of bounds');\n        }\n\n        this.swap(this.freeTile, newFree);\n        this.freeTile = newFree;\n    }\n\n    render(p: p5) {\n        p.rectMode(p.CORNER);\n        p.textSize(60);\n        p.textAlign(p.CENTER, p.CENTER);\n\n        const s = p.width / this.size;\n        for (let i = 0; i < this.size; i++) {\n            for (let j = 0; j < this.size; j++) {\n                const x = j * s;\n                const y = i * s;\n\n                p.fill(0);\n                p.stroke(255);\n                p.strokeWeight(1);\n                p.rect(x, y, s, s);\n\n                p.fill(255);\n\n                p.text(this.tiles[i][j] ?? '', x + s / 2, y + s / 2);\n            }\n        }\n    }\n\n    getValidMoves(): Direction[] {\n        const moves = [];\n        const end = this.size - 1;\n\n        if (this.freeTile.x !== 0) {\n            moves.push(Direction.LEFT);\n        }\n        if (this.freeTile.x !== end) {\n            moves.push(Direction.RIGHT);\n        }\n        if (this.freeTile.y !== 0) {\n            moves.push(Direction.UP);\n        }\n        if (this.freeTile.y !== end) {\n            moves.push(Direction.DOWN);\n        }\n        return moves;\n    }\n\n    static generate(size: number): { grid: Grid; desiredState: (number | null)[][] } {\n        if (size < 2) {\n            throw new Error('Grid size cannot be smaller than 2');\n        }\n\n        // Generate array from 0 to size*size (exclusive)\n        const numbers: (number | null)[] = range(size * size);\n        // Set last tile as empty\n        numbers[numbers.length - 1] = null;\n\n        // Make a shuffled copy!\n        const shuffled = shuffleArray(numbers);\n\n        // Convert 1D array into 2D\n        const tiles = to2D(shuffled, size);\n        const desiredState = to2D(numbers, size);\n\n        return {\n            grid: new Grid(size, tiles),\n            desiredState,\n        };\n    }\n\n    private computeFreeTile(): Tile {\n        const freeCell = findIndex2D(this.tiles, null);\n\n        if (!freeCell) {\n            throw new Error('No free cell was computed');\n        }\n\n        const [x, y] = freeCell;\n\n        return { x, y };\n    }\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass BinaryHeapStrategy {\r\n    constructor(options) {\r\n        this.comparator = options.comparator;\r\n        this.data = options.initialValues ? options.initialValues.slice(0) : [];\r\n        this._heapify();\r\n    }\r\n    _heapify() {\r\n        if (this.data.length > 0) {\r\n            for (let i = 0; i < this.data.length; i++) {\r\n                this._bubbleUp(i);\r\n            }\r\n        }\r\n    }\r\n    queue(value) {\r\n        this.data.push(value);\r\n        this._bubbleUp(this.data.length - 1);\r\n    }\r\n    dequeue() {\r\n        const ret = this.data[0];\r\n        const last = this.data.pop();\r\n        if (this.data.length > 0 && last !== undefined) {\r\n            this.data[0] = last;\r\n            this._bubbleDown(0);\r\n        }\r\n        return ret;\r\n    }\r\n    peek() {\r\n        return this.data[0];\r\n    }\r\n    clear() {\r\n        this.data.length = 0;\r\n    }\r\n    _bubbleUp(pos) {\r\n        while (pos > 0) {\r\n            const parent = (pos - 1) >>> 1;\r\n            if (this.comparator(this.data[pos], this.data[parent]) < 0) {\r\n                const x = this.data[parent];\r\n                this.data[parent] = this.data[pos];\r\n                this.data[pos] = x;\r\n                pos = parent;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    _bubbleDown(pos) {\r\n        let last = this.data.length - 1;\r\n        while (true) {\r\n            const left = (pos << 1) + 1;\r\n            const right = left + 1;\r\n            let minIndex = pos;\r\n            if (left <= last && this.comparator(this.data[left], this.data[minIndex]) < 0) {\r\n                minIndex = left;\r\n            }\r\n            if (right <= last && this.comparator(this.data[right], this.data[minIndex]) < 0) {\r\n                minIndex = right;\r\n            }\r\n            if (minIndex !== pos) {\r\n                const x = this.data[minIndex];\r\n                this.data[minIndex] = this.data[pos];\r\n                this.data[pos] = x;\r\n                pos = minIndex;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return void 0;\r\n    }\r\n}\r\nexports.default = BinaryHeapStrategy;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst BinaryHeapStrategy_1 = require(\"./BinaryHeapStrategy\");\r\nclass PriorityQueue {\r\n    constructor(options) {\r\n        this._length = 0;\r\n        this._length = options.initialValues ? options.initialValues.length : 0;\r\n        this.strategy = new BinaryHeapStrategy_1.default(options);\r\n    }\r\n    get length() { return this._length; }\r\n    queue(value) {\r\n        this._length++;\r\n        this.strategy.queue(value);\r\n    }\r\n    dequeue() {\r\n        if (!this._length)\r\n            throw new Error(\"Empty queue\");\r\n        this._length--;\r\n        return this.strategy.dequeue();\r\n    }\r\n    peek() {\r\n        if (!this._length)\r\n            throw new Error(\"Empty queue\");\r\n        return this.strategy.peek();\r\n    }\r\n    clear() {\r\n        this._length = 0;\r\n        this.strategy.clear();\r\n    }\r\n}\r\nexports.default = PriorityQueue;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PriorityQueue_1 = require(\"./src/PriorityQueue\");\r\nexports.default = PriorityQueue_1.default;\r\n","import PriorityQueue from 'ts-priority-queue';\nimport { AI } from './AI';\nimport { Grid, Direction } from '../game/Grid';\nimport { findIndex2D, sum2D, factorial, sizeOf, formatNumber, isRunningAsWorker } from '../lib/util';\nimport { Status } from '../game/EightPuzzle';\n\n/**\n * An implementation of the A* algorithm, which searches for a solution to the 8-Puzzle game\n */\nexport class AStarAI implements AI {\n    /**\n    The (priority) queue of states which has not been explored yet.\n    It is sorted asending by the \"cost-value\" of each game state.\n    **/\n    pq = new PriorityQueue<SearchNode>({\n        comparator: (a, b) => a.cost() - b.cost(),\n    });\n    /**The set of all states which has been explored in the search*/\n    explored = new StateSet();\n    /** The theoretical size of the search space, based on the size of the game board. */\n    searchSpace = 0;\n    /** The amount of memory, in bytes, a single grid is consuming. Used for memory usage metrics. */\n    gridMemSize = 0;\n\n    /**\n     * Search for a set of moves which transforms the grid into the desired state.\n     */\n    getMoves(grid: Grid, desiredState: (number | null)[][]): Direction[] {\n        // Calculate constants, for use in progress status\n        this.calculateProgressConstants(grid);\n\n        // Put initial state on queue\n        this.pq.queue(new SearchNode(grid, desiredState));\n\n        // Keep running until the queue is empty\n        // Maintain counter to decide when to report status\n        for (let i = 1; this.pq.length !== 0; i++) {\n            const node = this.pq.dequeue();\n\n            // Goal test\n            if (node.hasSolution()) {\n                console.debug(`Found solution! Explored ${formatNumber(this.explored.size)} nodes.`);\n                return node.actions;\n            }\n\n            // Report status to user, but only sometimes. Tradeoff between fast status updates and performance\n            if (i % 30000 == 0) {\n                this.reportProgress();\n            }\n\n            // Mark the current node as explored\n            this.explored.add(node);\n\n            // For each of valid moves in the current state\n            for (const move of node.moves()) {\n                // Make a copy of the current state, in order not to modify it for future iterations\n                const copy = node.copy();\n\n                // Perform the move\n                copy.move(move);\n\n                // If this new configuration is not in our explored set, add it to the queue\n                if (!this.explored.has(copy)) {\n                    this.pq.queue(copy);\n                }\n            }\n        }\n\n        // If we reach this code, no solution was found. Therefore throw error\n        const searchedPct = (this.explored.size / this.searchSpace) * 100;\n        throw new Error(\n            `Could not find a solution.\\nExplored ${formatNumber(searchedPct)}% of search space (${formatNumber(\n                this.explored.size\n            )} of ${formatNumber(this.searchSpace)} permutations)`\n        );\n    }\n\n    /**\n     * Calculate constants, for use in progress status\n     */\n    private calculateProgressConstants(grid: Grid): void {\n        // The theoretical bound of search space\n        this.searchSpace = factorial(grid.size * grid.size) / 2;\n        this.gridMemSize = sizeOf(grid);\n    }\n\n    /**\n     * Send progress updates to the main thread, in order to render the progres bar\n     */\n    private reportProgress() {\n        if (!isRunningAsWorker()) {\n            return;\n        }\n        const exploredMemSize = this.gridMemSize * this.explored.size;\n        const pqMemSize = this.gridMemSize * this.pq.length;\n        const currentExplored = this.explored.size;\n        const progress = currentExplored / this.searchSpace;\n        const percent = progress * 100;\n        const status = `(${formatNumber(currentExplored)} of ${formatNumber(this.searchSpace)} nodes explored)`;\n        self.postMessage({\n            cmd: 'ai_progress',\n            percent,\n            memory: exploredMemSize + pqMemSize,\n            status,\n        } as Status);\n    }\n}\n\n/**\n * A Simple wrapper around set, which handles comparison between search nodes (thus handling reference equality)\n */\nclass StateSet {\n    private set = new Set<string>();\n\n    add(node: SearchNode): void {\n        // Stringify state to use value equality instead of reference equality\n        this.set.add(JSON.stringify(node.getState()));\n    }\n\n    has(node: SearchNode): boolean {\n        return this.set.has(JSON.stringify(node.getState()));\n    }\n\n    get size(): number {\n        return this.set.size;\n    }\n\n    get items(): string[] {\n        return Array.from(this.set.values());\n    }\n}\n\n/**\n * Represents, and wraps, a concrete game state, and performs\n * the nessesary calculations (such as heuristics), which is\n * used during the search.\n */\nclass SearchNode {\n    grid: Grid;\n    actions: Direction[];\n    _manhattanDistanceCache: number | undefined;\n    desiredState: (number | null)[][];\n\n    constructor(grid: Grid, desiredState: (number | null)[][], previousActions: Direction[] = []) {\n        this.grid = grid;\n        this.desiredState = desiredState;\n        this.actions = previousActions;\n    }\n\n    move(action: Direction) {\n        // Invalidate manhattanDistanceCache, since it should update after a move\n        this._manhattanDistanceCache = undefined;\n\n        this.grid.move(action);\n        this.actions.push(action);\n    }\n\n    hasSolution(): boolean {\n        return JSON.stringify(this.grid.tiles) == JSON.stringify(this.desiredState);\n    }\n\n    cost(): number {\n        return this.actions.length + this.heuristic();\n    }\n\n    heuristic(): number {\n        return this.totalManhattanDistance();\n    }\n\n    /**\n     * Return the sum of manhattan distance of all cells in the grid.\n     */\n    totalManhattanDistance(): number {\n        if (this._manhattanDistanceCache) {\n            return this._manhattanDistanceCache;\n        }\n\n        const total = sum2D(this.grid.tiles, (cell, i, j) => {\n            const res = findIndex2D(this.desiredState, cell);\n\n            if (!res) {\n                const errLabel = cell === null ? '_EMPTY_' : cell;\n                throw new Error(`Could not find desired state for item ${errLabel}`);\n            }\n\n            const [x, y] = res;\n\n            return Math.abs(i - y) + Math.abs(j - x);\n        });\n\n        this._manhattanDistanceCache = total;\n\n        return total;\n    }\n\n    getState(): (number | null)[][] {\n        return this.grid.tiles;\n    }\n\n    moves(): Direction[] {\n        return this.grid.getValidMoves();\n    }\n\n    copy(): SearchNode {\n        return new SearchNode(this.grid.copy(), this.desiredState, [...this.actions]);\n    }\n}\n","import p5 from 'p5';\nimport { Grid, Direction } from './Grid';\nimport { wrap } from 'comlink';\nimport { calculateMoves } from '../ai/worker';\nimport { formatNumber, toMb } from '../lib/util';\nimport { solvers } from '../sketch';\n\nexport type Status = {\n    cmd: 'ai_progress';\n    percent: number;\n    status?: string;\n    memory?: number;\n};\n\ntype Solver = keyof typeof solvers;\n\nexport default class EightPuzzle {\n    size: number;\n\n    p: p5;\n    grid: Grid;\n    aiType: Solver;\n\n    desiredState: (number | null)[][];\n    moves: Direction[] | undefined;\n    currentMove = 0;\n    done = false;\n    errorMsg: string | undefined;\n\n    status: Status | undefined;\n\n    aiAsWorker = true;\n\n    constructor(p: p5, size: number, aiType: Solver) {\n        this.size = size;\n        this.p = p;\n        this.aiType = aiType;\n\n        this.p.createCanvas(600, 600);\n\n        this.createResetButton();\n\n        this.p.background(0);\n        this.drawStatusCenter('Initializing...');\n\n        const { grid, desiredState } = Grid.generate(this.size);\n\n        this.grid = grid;\n        this.desiredState = desiredState;\n\n        this.p.frameRate(5);\n    }\n\n    init(): void {\n        this.calculateMoves().catch((err) => {\n            this.errorMsg = err;\n            this.moves = [];\n            this.p.noLoop();\n            console.error(err);\n        });\n    }\n\n    reset(): void {\n        this.p.background(0);\n        this.drawStatusCenter('Resetting...');\n\n        this.moves = undefined;\n        this.currentMove = 0;\n        this.done = false;\n        this.errorMsg = undefined;\n        this.status = undefined;\n\n        const { grid, desiredState } = Grid.generate(this.size);\n\n        this.grid = grid;\n        this.desiredState = desiredState;\n\n        this.init();\n        this.p.loop();\n    }\n\n    putAIOnMainThread(): void {\n        this.aiAsWorker = false;\n    }\n\n    private async calculateMoves(): Promise<void> {\n        if (this.aiAsWorker) {\n            return this.calculateMovesWithWorker();\n        }\n\n        // Wrap in a promise to match signature of worker\n        return new Promise((res) => {\n            const factory = solvers[this.aiType];\n            const ai = factory();\n            this.moves = ai.getMoves(this.grid.copy(), this.desiredState);\n            res();\n        });\n    }\n\n    private async calculateMovesWithWorker() {\n        const worker = new Worker('../ai/worker.ts');\n        worker.onmessage = ({ data }) => {\n            if (data.cmd === 'ai_progress') {\n                this.status = data;\n            }\n        };\n        const action = wrap<typeof calculateMoves>(worker);\n\n        this.moves = await action(this.aiType, this.size, this.grid.tiles, this.grid.freeTile, this.desiredState);\n\n        worker.terminate();\n    }\n\n    private createResetButton(): void {\n        const button = this.p.createButton('reset');\n        button.addClass('canvasButton');\n        // button.size(50, 30);\n\n        const buttonSize = button.size() as { width: number; height: number };\n\n        button.position(this.p.width - buttonSize.width - 10, this.p.height - buttonSize.height - 10);\n        button.mousePressed(() => this.reset());\n    }\n\n    update() {\n        if (!this.moves) {\n            return;\n        }\n\n        if (this.currentMove > this.moves.length - 1) {\n            this.done = true;\n            return;\n        }\n\n        this.grid.move(this.moves[this.currentMove++]);\n    }\n\n    draw() {\n        this.p.background(0);\n\n        if (this.moves === undefined) {\n            this.drawProgress();\n            return;\n        }\n\n        if (this.errorMsg) {\n            this.grid.render(this.p);\n            this.drawStatusSmall(this.errorMsg);\n            return;\n        }\n\n        this.update();\n        this.grid.render(this.p);\n\n        if (this.done) {\n            this.drawStatusSmall(`Solved in ${this.moves.length} steps! `);\n            this.p.noLoop();\n        } else {\n            this.drawStatusSmall(`Move ${this.currentMove} of ${this.moves.length}`);\n        }\n    }\n\n    drawStatusSmall(status: string): void {\n        this.p.textSize(16);\n        this.p.textAlign(this.p.LEFT, this.p.TOP);\n        this.p.fill(255);\n        this.p.text(status, 10, 10, this.p.width - 20, this.p.height - 20);\n    }\n\n    drawStatusCenter(status: string): void {\n        this.p.textSize(30);\n        this.p.textAlign(this.p.CENTER, this.p.CENTER);\n        this.p.fill(255);\n        this.p.text(status, this.p.width / 2, this.p.height / 2);\n    }\n\n    drawProgress(): void {\n        const titleText = 'Searching for solution...';\n        if (this.status === undefined) {\n            this.drawStatusCenter(titleText);\n            return;\n        }\n\n        // Get metrics and calculate percentage\n        const { percent, memory, status } = this.status;\n\n        const centerX = this.p.width / 2;\n        const centerY = this.p.height / 2;\n\n        const titleX = centerX;\n        const titleY = centerY - 30;\n        this.p.textSize(30);\n        this.p.textAlign(this.p.CENTER, this.p.CENTER);\n        this.p.fill(255);\n        this.p.text(titleText, titleX, titleY);\n\n        const progWidth = this.p.width / 3;\n        const progHeight = 20;\n        const progX = centerX - progWidth / 2;\n        const progY = titleY + 20;\n\n        this.p.fill(0);\n        this.p.stroke(255);\n        this.p.strokeWeight(1);\n        this.p.rect(progX, progY, progWidth, progHeight);\n\n        this.p.fill(255);\n        this.p.strokeWeight(0);\n        this.p.rect(progX, progY, progWidth * (percent / 100), progHeight);\n\n        this.p.textSize(16);\n        this.p.text(`${formatNumber(percent)}% ${status ?? ''}`, centerX, progY + progHeight + 20);\n\n        if (memory !== undefined) {\n            const lbl = `Memory usage: ${toMb(memory)}`;\n\n            this.p.textAlign(this.p.LEFT, this.p.BOTTOM);\n            this.p.text(lbl, 10, this.p.height - 5);\n        }\n        // this.drawStatus(msg);\n    }\n}\n","import { AStarAI } from './ai/AStarAI';\nimport p5 from 'p5';\nimport EightPuzzle from './game/EightPuzzle';\nimport { AI } from './ai/AI';\n\nexport const solvers: { [key: string]: () => AI } = {\n    'a*': () => new AStarAI(),\n};\n\nexport function makeGame(p: p5) {\n    let game: EightPuzzle;\n    p.setup = () => {\n        game = new EightPuzzle(p, 3, 'a*');\n        // Enable this if needed for debugging\n        // game.putAIOnMainThread();\n        game.init();\n    };\n    p.draw = () => {\n        game?.draw();\n    };\n}\n","import { expose } from 'comlink';\nimport { Direction, Tile, Grid } from '../game/Grid';\nimport { solvers } from '../sketch';\n\nexport function calculateMoves(\n    solver: keyof typeof solvers,\n    size: number,\n    tiles: (number | null)[][],\n    freeCell: Tile,\n    desiredState: (number | null)[][]\n): Direction[] {\n    const grid = new Grid(size, tiles, freeCell);\n\n    const ai = solvers[solver]();\n\n    return ai.getMoves(grid, desiredState);\n}\n\nexpose(calculateMoves);\n"]}